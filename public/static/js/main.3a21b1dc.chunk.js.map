{"version":3,"sources":["providers/UserProvider.tsx","utils/fetchData.ts","components/ColorSwitcher.tsx","components/NavBar.tsx","components/InputField.tsx","components/Wrapper.tsx","pages/CreateUrl/index.tsx","pages/DisplayMessage/index.tsx","pages/Home/index.tsx","pages/Login/index.tsx","pages/NotFound/index.tsx","pages/Register/index.tsx","components/SingleItem.tsx","components/TitleCol.tsx","pages/Urls/index.tsx","App.tsx","theme.tsx","index.tsx"],"names":["UserContext","React","createContext","userInfo","id","name","email","loading","loggedIn","setLoggedIn","setUserInfo","setLoading","UserProvider","children","useState","Provider","value","info","val","postMethod","endPoint","inputParams","a","Axios","post","withCredentials","data","getMethod","get","ColorSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","label","fontSize","size","variant","color","mr","onClick","icon","aria-label","NavBar","useContext","toast","useToast","history","useHistory","location","useLocation","logOutzClicked","catch","err","title","description","status","duration","isClosable","position","push","display","flexDir","width","rowSpan","p","justifyContent","alignSelf","as","pathname","routerLink","to","ml","colorScheme","InputField","useField","field","error","isInvalid","htmlFor","Wrapper","mt","mx","maxW","w","CreateUrl","url","setUrl","onCopy","useClipboard","useDisclosure","isOpen","onOpen","onClose","initialValues","content","type","expiresAt","onSubmit","resetForm","Number","window","protocol","host","isSubmitting","setFieldValue","values","placeholder","required","onChange","e","target","isLoading","isCentered","motionPreset","textAlign","open","DisplayMessage","message","setMessage","day","hour","minute","seconds","expiresOn","setExpiresOn","params","useParams","convertMS","milliseconds","Math","floor","useEffect","interval","msgInfo","href","expiryTime","setInterval","newTime","Date","now","clearInterval","fetchInfo","flexDirection","Home","alignItems","Login","password","setErrors","NotFound","msg","setMsg","URLSearchParams","search","SingleItem","isActive","isMobile","isSmallDevices","urlToGo","displayUrl","my","py","mb","pr","disabled","toLocaleDateString","toLocaleTimeString","style","margin","TitleCol","fontWeight","Urls","innerWidth","dataLoading","setDataLoading","messages","setMessages","currentPage","setCurrentPage","totalPages","setTotalPages","outerLimit","innerLimit","ceil","count","fetchMessages","baseStyles","normalStyles","activeStyles","bg","height","length","map","expired","isDisabled","separatorStyles","pagesQuantity","onPageChange","align","justify","isInline","Link","App","then","exact","path","component","Register","fonts","chakraTheme","mono","theme","colors","black","breakpoints","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a21b1dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { UserResponse as userInfoType  } from '../types';\r\n\r\ntype ContextType = {\r\n  userInfo: userInfoType;\r\n  loggedIn: boolean;\r\n  loading: boolean;\r\n  setLoggedIn: (val: boolean) => void;\r\n  setUserInfo: (info: userInfoType) => void;\r\n  setLoading: (val: boolean) => void;\r\n};\r\n\r\nexport const UserContext = React.createContext<ContextType>({\r\n  userInfo: {\r\n    id: 0,\r\n    name: '',\r\n    email: '',\r\n  },\r\n  loading: true,\r\n  loggedIn: false,\r\n  setLoggedIn: () => {},\r\n  setUserInfo: () => {},\r\n  setLoading: () => {},\r\n});\r\n\r\ninterface UserProvierProps {};\r\n\r\nconst UserProvider:  React.FC<UserProvierProps> = ({ children }) => {\r\n  const [userInfo, setUserInfo] = useState<userInfoType>({\r\n    id: 0,\r\n    name: '',\r\n    email: '',\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        userInfo,\r\n        loggedIn,\r\n        loading,\r\n        setUserInfo: (info: userInfoType) => {\r\n          setUserInfo(info);\r\n        },\r\n        setLoggedIn: (val: boolean) => {\r\n          setLoggedIn(val);\r\n        },\r\n        setLoading: (val: boolean) => {\r\n          setLoading(val);\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n};\r\n\r\nexport default UserProvider;","import Axios from 'axios';\r\n\r\nexport const postMethod = async <I, O>(endPoint: string, inputParams: I) => {\r\n  const data = await Axios.post<O>(`/api${endPoint}`, inputParams, { withCredentials: true });\r\n  return data.data;\r\n};\r\n\r\nexport const getMethod = async <O>(endPoint: string) => {\r\n  const data = await Axios.get<O>(`/api${endPoint}`, { withCredentials: true });\r\n  return data.data;\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  useColorMode,\r\n  useColorModeValue,\r\n  IconButton,\r\n  IconButtonProps,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\r\n\r\nexport const ColorSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\r\n  const { toggleColorMode } = useColorMode()\r\n  const text = useColorModeValue(\"dark\", \"light\")\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\r\n\r\n  return (\r\n    <Tooltip label=\"Switch Theme\" fontSize=\"md\">\r\n      <IconButton\r\n        size=\"md\"\r\n        fontSize=\"lg\"\r\n        variant=\"ghost\"\r\n        color=\"current\"\r\n        mr={5}\r\n        onClick={toggleColorMode}\r\n        icon={<SwitchIcon />}\r\n        aria-label={`Switch to ${text} mode`}\r\n        {...props}\r\n      />\r\n    </Tooltip>\r\n  )\r\n};\r\n","import { Box, Button, IconButton, Text, Tooltip, useToast } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { FaEye, FaPlus } from 'react-icons/fa';\r\nimport { Link as routerLink, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { UserContext } from '../providers/UserProvider';\r\nimport { postMethod } from '../utils/fetchData';\r\nimport { ColorSwitcher } from './ColorSwitcher';\r\n\r\ninterface NavBarProps {}\r\n\r\n\r\nconst NavBar: React.FC<NavBarProps> = () => {\r\n  const { loggedIn, loading, setLoggedIn, setUserInfo } = React.useContext(UserContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const logOutzClicked = async () => {\r\n    await postMethod<any, any>('/logout', {}).catch(err => {});\r\n    toast({\r\n      title: 'Successfully Logged Out',\r\n      description: '',\r\n      status: 'success',\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n    setUserInfo({\r\n      id: 0,\r\n      name: '',\r\n      email : ''\r\n    });\r\n    history.push('/');\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDir=\"row\"\r\n      width=\"100%\"\r\n      rowSpan={1}\r\n      p={3}\r\n    >\r\n      <Box\r\n        justifyContent=\"flex-start\"\r\n        p={3}\r\n        rowSpan={1}\r\n        width=\"100%\"\r\n        flexDir=\"row\"\r\n        alignSelf=\"center\"\r\n      >\r\n        <Text fontSize=\"2xl\" as=\"b\">url app</Text>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        flexDir=\"row\"\r\n        width=\"100%\"\r\n        rowSpan={1}\r\n        p={3}\r\n      >\r\n        <ColorSwitcher />\r\n        {loading ? <> </> : <>\r\n          { loggedIn ?\r\n            <>\r\n              {\r\n                location.pathname === '/urls'\r\n                  ? <Tooltip label=\"Create New Url\" fontSize=\"md\">\r\n                    <IconButton\r\n                      as={routerLink}\r\n                      to=\"/create\"\r\n                      size=\"md\"\r\n                      fontSize=\"2xl\"\r\n                      variant=\"ghost\"\r\n                      color=\"current\"\r\n                      icon={<FaPlus />}\r\n                      aria-label={`Add New Url`}\r\n                    />\r\n                  </Tooltip>\r\n                  : <> </>\r\n              }\r\n              {\r\n                location.pathname === '/create'\r\n                  ? <Tooltip label=\"View My Urls\" fontSize=\"md\">\r\n                    <IconButton\r\n                      as={routerLink}\r\n                      to=\"/urls\"\r\n                      size=\"md\"\r\n                      fontSize=\"2xl\"\r\n                      variant=\"ghost\"\r\n                      color=\"current\"\r\n                      icon={<FaEye />}\r\n                      aria-label={`View All Urls`}\r\n                    />\r\n                  </Tooltip>\r\n                  : <> </>\r\n              }\r\n              <Button\r\n                ml={5}\r\n                onClick={logOutzClicked}\r\n                colorScheme=\"teal\"\r\n                variant=\"ghost\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </> :\r\n            <>\r\n              {\r\n                location.pathname === '/login' ?\r\n                  <></> :\r\n                  <Button\r\n                    as={routerLink}\r\n                    to=\"/login\"\r\n                    ml={0}\r\n                    colorScheme=\"teal\"\r\n                    variant=\"ghost\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n              }\r\n              {\r\n                location.pathname === '/' || location.pathname === '/register' ?\r\n                  <></> :\r\n                  <Button\r\n                    as={routerLink}\r\n                    to=\"/register\"\r\n                    ml={0}\r\n                    colorScheme=\"teal\"\r\n                    variant=\"ghost\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n              }\r\n            </>\r\n          }\r\n        </> }\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { InputHTMLAttributes } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n} from \"@chakra-ui/react\"\r\nimport { useField } from 'formik';\r\n\r\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\r\n  name: string;\r\n  label: string;\r\n};\r\n\r\nconst InputField: React.FC<InputFieldProps> = ({\r\n  label,\r\n  size: _,\r\n  ...props\r\n}) => {\r\n  const [field, {error}] = useField(props);\r\n  return (\r\n    <FormControl isInvalid={!!error}>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <Input\r\n        {...field}\r\n        {...props}\r\n        id={field.name}\r\n      />\r\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/react\"\r\n\r\ninterface WrapperProps {\r\n  variant?: 'small' | 'regular',\r\n  mt?: number,\r\n  width?: string,\r\n}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = ({\r\n  children,\r\n  variant='regular',\r\n  width=\"75%\",\r\n  mt=4,\r\n}) => {\r\n  return (\r\n    <Box\r\n      mt={mt}\r\n      mx=\"auto\"\r\n      maxW={variant === 'regular' ? \"800px\" : \"400px\"}\r\n      w={width}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { useClipboard, useDisclosure } from '@chakra-ui/hooks';\r\nimport { Box, Heading } from '@chakra-ui/layout';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from '@chakra-ui/modal';\r\nimport { Select } from '@chakra-ui/select';\r\nimport { useToast } from '@chakra-ui/toast';\r\nimport { Formik, Form } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport InputField from '../../components/InputField';\r\nimport Wrapper from '../../components/Wrapper';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { MessageResponse, CommonResponse, MessageInput } from '../../types';\r\nimport { postMethod } from '../../utils/fetchData';\r\n\r\ninterface CreateUrlProps {}\r\n\r\nconst CreateUrl: React.FC<CreateUrlProps> = () => {\r\n  const [url, setUrl] = useState('');\r\n  const { onCopy } = useClipboard(url);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { loggedIn, loading } = React.useContext(UserContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const handleCopy = () => {\r\n    onCopy();\r\n    onClose();\r\n  };\r\n  if (!loggedIn && !loading) {\r\n    toast({\r\n      title: 'Please Login To Continue',\r\n      status: 'error',\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n    history.push('/login');\r\n  }\r\n  return (\r\n    <Wrapper variant=\"small\" mt={100}>\r\n      <Formik\r\n        initialValues={{content: \"\", type: \"MESSAGE\", expiresAt: \"10\"}}\r\n        onSubmit={async ({content, type, expiresAt}, {resetForm}) => {\r\n          try {\r\n            const data = await postMethod<MessageInput, CommonResponse<MessageResponse | string>>('/message/create', {\r\n              content,\r\n              type,\r\n              expiresAt: Number(expiresAt),\r\n            });\r\n            if (data.status === 'FAILED') {\r\n              toast({\r\n                title: 'Failed to create a new url',\r\n                description: data.data,\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n              });\r\n            } else {\r\n              const { url } = data.data as MessageResponse;\r\n              setUrl(`${window.location.protocol}//${window.location.host}/${url}`);\r\n              onOpen();\r\n              resetForm();\r\n            }\r\n          } catch (err) {\r\n            toast({\r\n              title: 'Server Error Please Try Again',\r\n              status: 'error',\r\n              duration: 5000,\r\n              isClosable: true,\r\n              position: \"bottom-left\",\r\n            });\r\n          }\r\n        }}\r\n      > \r\n        {({isSubmitting, setFieldValue, values}) => (\r\n          <Form>\r\n            <InputField\r\n              name='content'\r\n              placeholder={`Enter your ${values.type === 'MESSAGE' ? 'Message' : 'URL'} here`}\r\n              label={values.type === 'MESSAGE' ? 'Message' : 'URL'}\r\n              type=\"text\"\r\n              required\r\n            />\r\n            <Box mt={4}>\r\n              <Select\r\n                variant=\"flushed\"\r\n                name='type'\r\n                value={values.type}\r\n                onChange={(e) => {\r\n                  setFieldValue('type', e.target.value, true);\r\n                }}\r\n                required\r\n              >\r\n                <option value=\"MESSAGE\">Message</option>\r\n                <option value=\"LINK\">URL</option>\r\n              </Select>\r\n            </Box>\r\n            <Box mt={4}>\r\n              <Select\r\n                variant=\"flushed\"\r\n                name='expiresAt'\r\n                required\r\n                value={values.expiresAt}\r\n                onChange={(e) => {\r\n                  setFieldValue('expiresAt', e.target.value, true);\r\n                }}\r\n              >\r\n                <option value=\"1\">1 Minute</option>\r\n                <option value=\"10\">10 Minutes</option>\r\n                <option value=\"30\">30 Minute</option>\r\n                <option value=\"45\">45 Minute</option>\r\n                <option value=\"60\">1 Hour</option>\r\n              </Select>\r\n            </Box>\r\n            <Button\r\n              mt={4}\r\n              colorScheme='teal'\r\n              isLoading={isSubmitting || loading}\r\n              type='submit'\r\n            >\r\n              Create New Url\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Modal\r\n        isCentered\r\n        onClose={onClose}\r\n        isOpen={isOpen}\r\n        size=\"xl\"\r\n        motionPreset=\"slideInBottom\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Url Created Successfully</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Heading size=\"xl\" as=\"h3\" textAlign=\"center\">\r\n              Your message has been created!\r\n            </Heading>\r\n            <br />\r\n            <Button\r\n              onClick={() => {\r\n                window.open(url, '_blank');\r\n                onClose();\r\n              }}\r\n              colorScheme=\"teal\"\r\n              variant=\"ghost\"\r\n              width=\"100%\"\r\n            >\r\n              {url}\r\n            </Button>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              onClick={handleCopy}\r\n              variant=\"ghost\"\r\n            >\r\n              Copy Url\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CreateUrl;\r\n","import { Box, Flex, Heading, Text } from '@chakra-ui/layout';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Link } from \"@chakra-ui/react\"\r\n\r\nimport Wrapper from '../../components/Wrapper';\r\nimport { CommonResponse, MessageResponse } from '../../types';\r\nimport { getMethod } from '../../utils/fetchData';\r\n\r\ninterface DisplayMessageProps {}\r\n\r\nconst DisplayMessage: React.FC<DisplayMessageProps> = () => {\r\n  const [message, setMessage] = useState<MessageResponse | null>(null);\r\n  const [expiresOn, setExpiresOn] = useState({\r\n    day: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    seconds: 0\r\n  });\r\n  const params = useParams() as { id: string; };\r\n  const history = useHistory();\r\n  const convertMS = (milliseconds: number) => {\r\n    let day;\r\n    let hour;\r\n    let minute;\r\n    let seconds;\r\n    seconds = Math.floor(milliseconds / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    hour = Math.floor(minute / 60);\r\n    minute = minute % 60;\r\n    day = Math.floor(hour / 24);\r\n    hour = hour % 24;\r\n    return {\r\n      day,\r\n      hour,\r\n      minute,\r\n      seconds,\r\n    };\r\n  }\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    async function fetchInfo() {\r\n      const data = await getMethod<CommonResponse<MessageResponse | string>>(`/view/${params.id}`);\r\n      if (data.status === 'SUCCESS') {\r\n        const msgInfo = data.data as MessageResponse;\r\n        if (msgInfo.type === 'LINK') {\r\n          window.location.href = msgInfo.content;\r\n        } else {\r\n          const expiryTime = msgInfo.expiresAt;\r\n          setMessage(msgInfo);\r\n          interval = setInterval(() => {\r\n            const newTime = expiryTime - Date.now();\r\n            if (newTime <= 0) {\r\n              clearInterval(interval);\r\n              window.location.href = '/notFound?type=expired';\r\n            }\r\n            setExpiresOn(convertMS(newTime));\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        const { data: msg } = data;\r\n        if (msg === 'Link Expired') {\r\n          history.push('/notFound?type=expired');\r\n        } else {\r\n          history.push('/notFound?type=notfound');\r\n        }\r\n      }\r\n    }\r\n    fetchInfo();\r\n    return () => {\r\n      \r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const onClickMethod = () => {\r\n    window.location.href = '/';\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        message ?\r\n          <Wrapper>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n            >\r\n              <Heading\r\n                as=\"h1\"\r\n                size=\"4xl\"\r\n                textAlign=\"center\"\r\n                mt=\"25%\"\r\n              >\r\n                {message.content}\r\n              </Heading>\r\n              <Heading\r\n                size=\"lg\"\r\n                textAlign=\"center\"\r\n                mt={35}\r\n                as=\"h5\"\r\n              >\r\n                Create on for yourself get started <Link onClick={onClickMethod}>here</Link>.\r\n              </Heading>\r\n              <Flex justifyContent=\"center\" mt={10}>\r\n                <Text as='span'>Message will disappear in&nbsp;</Text>\r\n                {expiresOn.day && expiresOn.day > 0 ? <Text as='span'>{expiresOn.day}d&nbsp;</Text> : null}\r\n                {expiresOn.hour && expiresOn.hour > 0 ? <Text as='span'>{expiresOn.hour}h&nbsp;</Text> : null}\r\n                {expiresOn.minute && expiresOn.minute > 0 ? <Text as='span'>{expiresOn.minute}m&nbsp;</Text> : null}\r\n                {expiresOn.seconds && expiresOn.seconds > 0 ? <Text as='span'>{expiresOn.seconds}s</Text> : null}\r\n              </Flex>\r\n            </Box>\r\n          </Wrapper>\r\n          : null\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayMessage;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { Flex, Text } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport { Link as routerLink } from 'react-router-dom';\r\n\r\nimport Wrapper from '../../components/Wrapper';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\ninterface HomeProps {}\r\n\r\nconst Home: React.FC<HomeProps> = () => {\r\n  const { loading, loggedIn } = React.useContext(UserContext);\r\n  return (\r\n    <Wrapper>\r\n      <Flex alignItems=\"center\" flexDir=\"column\" mt={100}>\r\n        <Text fontSize=\"4xl\" textAlign=\"center\">Welcome to URL APP</Text>\r\n        <Button\r\n          mt={8}\r\n          colorScheme=\"teal\"\r\n          isLoading={loading}\r\n          as={routerLink}\r\n          to={loggedIn ? \"/urls\" : \"/register\"}\r\n        >\r\n          Get Started\r\n        </Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { Box, Button, useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport InputField from \"../../components/InputField\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport { postMethod } from \"../../utils/fetchData\";\r\nimport { CommonResponse, LoginInput, UserResponse } from \"../../types\";\r\n\r\ninterface LoginProps {}\r\n\r\nconst Login: React.FC<LoginProps> = () => {\r\n  const { loggedIn, setLoggedIn, setUserInfo, loading } = React.useContext(UserContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  if (loggedIn) {\r\n    history.push('/urls');\r\n  }\r\n  return (\r\n    <Wrapper variant=\"small\" mt={100}>\r\n      <Formik\r\n        initialValues={{email: \"\", password: \"\"}}\r\n        onSubmit={async (values, {setErrors}) => {\r\n          try {\r\n            const data = await postMethod<LoginInput, CommonResponse<UserResponse | string>>('/login', values);\r\n            if (data.status === 'FAILED') {\r\n              toast({\r\n                title: 'Login Failed',\r\n                description: data.data,\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n              });\r\n            } else {\r\n              const userInfo = data.data as UserResponse;\r\n              toast({\r\n                title: 'Successfully Logged In',\r\n                description: `Welcome Back ${userInfo.name}`,\r\n                status: 'success',\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n              });\r\n              setUserInfo(userInfo);\r\n              setLoggedIn(true);\r\n            }\r\n          } catch (err) {\r\n            toast({\r\n              title: 'Login Failed',\r\n              description: 'Internal Server Error',\r\n              status: 'error',\r\n              duration: 5000,\r\n              isClosable: true,\r\n              position: \"bottom-left\",\r\n            });\r\n          }\r\n        }}\r\n      > \r\n        {({isSubmitting}) => (\r\n          <Form>\r\n            <InputField\r\n              name='email'\r\n              placeholder='email@something.com'\r\n              label='Email'\r\n              type='email'\r\n              required={true}\r\n            />\r\n            <Box mt={4}>\r\n              <InputField\r\n                name='password'\r\n                placeholder='Password'\r\n                label='Password'\r\n                type='password'\r\n                required={true}\r\n              />\r\n            </Box>\r\n            <Button\r\n              mt={4}\r\n              colorScheme='teal'\r\n              isLoading={isSubmitting || loading}\r\n              type='submit'\r\n            >\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { Box, Heading } from '@chakra-ui/layout';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport Wrapper from '../../components/Wrapper';\r\n\r\ninterface NotFoundProps {}\r\n\r\nconst NotFound: React.FC<NotFoundProps> = () => {\r\n  const location = useLocation();\r\n  const [msg, setMsg] = useState('');\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const data = params.get('type') === 'expired' \r\n      ? \"This message or link is expired.\"\r\n      : \"This message or link may not have existed.\"\r\n    setMsg(data);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const onClickMethod = () => {\r\n    window.location.href = '/';\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n      >\r\n        <Heading\r\n          as=\"h1\"\r\n          size=\"4xl\"\r\n          textAlign=\"center\"\r\n          mt=\"25%\"\r\n        >\r\n          Gone! 😮\r\n        </Heading>\r\n        <Heading\r\n          size=\"lg\"\r\n          textAlign=\"center\"\r\n          mt={35}\r\n          as=\"h5\"\r\n        >\r\n          {msg}\r\n        </Heading>\r\n        <Button\r\n          onClick={onClickMethod}\r\n          mt={10}\r\n          colorScheme=\"teal\"\r\n          alignSelf=\"center\"\r\n        >\r\n          Go Home\r\n        </Button>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { Box, Button, useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport InputField from \"../../components/InputField\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport { postMethod } from \"../../utils/fetchData\";\r\nimport { CommonResponse, RegisterInput, UserResponse } from \"../../types\";\r\n\r\ninterface LoginProps {}\r\n\r\nconst Login: React.FC<LoginProps> = () => {\r\n  const { loggedIn, setLoggedIn, setUserInfo, loading } = React.useContext(UserContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  if (loggedIn) {\r\n    history.push('/urls');\r\n  }\r\n  return (\r\n    <Wrapper variant=\"small\" mt={100}>\r\n      <Formik\r\n        initialValues={{email: \"\", password: \"\", name: \"\"}}\r\n        onSubmit={async (values, {setErrors}) => {\r\n          try {\r\n            const data = await postMethod<RegisterInput, CommonResponse<UserResponse | string>>('/register', values);\r\n            if (data.status === 'FAILED') {\r\n              toast({\r\n                title: 'Registration Failed',\r\n                description: data.data,\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n              });\r\n            } else {\r\n              const userInfo = data.data as UserResponse;\r\n              toast({\r\n                title: 'Successfully Registered',\r\n                description: `Welcome ${userInfo.name}`,\r\n                status: 'success',\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n              });\r\n              setUserInfo(userInfo);\r\n              setLoggedIn(true);\r\n            }\r\n          } catch (err) {\r\n            toast({\r\n              title: 'Registration Failed',\r\n              description: 'Internal Server Error',\r\n              status: 'error',\r\n              duration: 5000,\r\n              isClosable: true,\r\n              position: \"bottom-left\",\r\n            });\r\n          }\r\n        }}\r\n      > \r\n        {({isSubmitting}) => (\r\n          <Form>\r\n            <InputField\r\n              name='email'\r\n              placeholder='email@something.com'\r\n              label='Email'\r\n              type='email'\r\n              required={true}\r\n            />\r\n            <InputField\r\n              name='name'\r\n              placeholder='Name'\r\n              label='Name'\r\n              type='text'\r\n              required={true}\r\n            />\r\n            <Box mt={4}>\r\n              <InputField\r\n                name='password'\r\n                placeholder='Password'\r\n                label='Password'\r\n                type='password'\r\n                required={true}\r\n              />\r\n            </Box>\r\n            <Button\r\n              mt={4}\r\n              colorScheme='teal'\r\n              isLoading={isSubmitting || loading}\r\n              type='submit'\r\n            >\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button, IconButton, Tooltip, useClipboard, useToast } from '@chakra-ui/react';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport { BsChatSquareQuote, BsLink45Deg } from 'react-icons/bs';\r\nimport { Container, Text } from '@chakra-ui/layout';\r\nimport React from 'react';\r\n\r\ninterface SingleItemProps {\r\n  url: string;\r\n  isActive: boolean;\r\n  expiresAt: Date;\r\n  type: string;\r\n  isMobile: boolean;\r\n  isSmallDevices: boolean;\r\n}\r\n\r\nconst SingleItem: React.FC<SingleItemProps> = ({\r\n  url,\r\n  isActive,\r\n  expiresAt,\r\n  type,\r\n  isMobile,\r\n  isSmallDevices,\r\n}) => {\r\n  const toast = useToast();\r\n  const urlToGo = `${window.location.protocol}//${window.location.host}/${url}`;\r\n  const displayUrl = `/${url}`;\r\n  const { onCopy } = useClipboard(urlToGo);\r\n  const copyUrl = () => {\r\n    if (isActive) {\r\n      onCopy();\r\n      toast({\r\n        title: 'Link Copied to Clipboard.',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    } else {\r\n      toast({\r\n        title: 'This link is expired.',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  const goToUrl = () => {\r\n    if (isActive) {\r\n      window.open(urlToGo, '_blank');\r\n    }\r\n  }\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      flexDir=\"row\"\r\n      width=\"100%\"\r\n      maxW=\"100%\"\r\n      rowSpan={1}\r\n      my={2.5}\r\n      py={6}\r\n      fontSize={[\"sm\", \"md\", \"lg\", \"xl\"]}\r\n    >\r\n      <Text\r\n        color={isActive ? 'green.300' : 'red.300'}\r\n        as=\"b\"\r\n        mt=\"auto\"\r\n        mb=\"auto\"\r\n        pr={15}\r\n        fontSize={isSmallDevices ? 'md' : 'xl'}\r\n      >\r\n        ● {isActive ? 'ACTIVE' : 'Expired'}\r\n      </Text>\r\n      <Button\r\n        pr={15}\r\n        mt=\"auto\"\r\n        mb=\"auto\"\r\n        width={isSmallDevices ? \"35%\" : \"50%\"}\r\n        disabled={!isActive}\r\n        onClick={copyUrl}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        fontSize={isMobile ? '2xl' : 'xl'}\r\n      >\r\n        {displayUrl}\r\n      </Button>\r\n      {!isMobile \r\n        ? <Text\r\n            width=\"18%\"\r\n            as=\"b\"\r\n            pr={15}\r\n            textAlign=\"center\"\r\n          >\r\n            {expiresAt.toLocaleDateString('en-GB')}\r\n            <br />\r\n            <Text\r\n              as=\"em\"\r\n              textAlign=\"center\"\r\n            >\r\n              {expiresAt.toLocaleTimeString()}\r\n            </Text>\r\n          </Text>\r\n        : null\r\n      }\r\n      <span style={{margin: 'auto'}}>\r\n        <Tooltip label={type === 'LINK' ? 'URL' : 'Message'} fontSize=\"md\">\r\n          <IconButton\r\n            size=\"md\"\r\n            fontSize=\"2xl\"\r\n            variant=\"ghost\"\r\n            color=\"current\"\r\n            mr=\"5\"\r\n            icon={type === 'LINK' ? <BsLink45Deg /> : <BsChatSquareQuote />}\r\n            aria-label={type === 'LINK' ? 'URL' : 'Message'}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip label=\"Go to Url\" fontSize=\"md\">\r\n          <IconButton\r\n            disabled={!isActive}\r\n            size=\"md\"\r\n            fontSize=\"2xl\"\r\n            variant=\"ghost\"\r\n            color=\"current\"\r\n            onClick={goToUrl}\r\n            icon={<FaChevronRight />}\r\n            aria-label={`Go to the Url`}\r\n          />\r\n        </Tooltip>\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SingleItem;\r\n","import { Container, Text } from '@chakra-ui/layout';\r\nimport React from 'react';\r\n\r\ninterface TitleColProps {\r\n  isMobile: boolean;\r\n  isSmallDevices: boolean;\r\n}\r\n\r\nconst TitleCol: React.FC<TitleColProps> = ({\r\n  isMobile,\r\n  isSmallDevices,\r\n}) => {\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      flexDir=\"row\"\r\n      width=\"100%\"\r\n      maxW=\"100%\"\r\n      rowSpan={1}\r\n      py={2}\r\n      fontWeight=\"bold\"\r\n      fontSize={[\"sm\", \"md\", \"lg\", \"xl\"]}\r\n    >\r\n      <Text\r\n        textAlign=\"center\"\r\n        pr={15}\r\n        fontSize=\"lg\"\r\n      >\r\n        STATUS\r\n      </Text>\r\n      <Text\r\n        pr={15}\r\n        textAlign=\"center\"\r\n        width={isSmallDevices ? \"35%\" : \"50%\"}\r\n        fontSize=\"lg\"\r\n      >\r\n        URL\r\n      </Text>\r\n      {!isMobile \r\n        ? <Text\r\n            width=\"18%\"\r\n            pr={15}\r\n            textAlign=\"center\"\r\n          >\r\n            Expires At\r\n          </Text>\r\n        : null\r\n      }\r\n      <span style={{margin: 'auto'}}>\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TitleCol;\r\n","import { Flex, Heading, Stack, Text } from '@chakra-ui/layout';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useToast } from '@chakra-ui/toast';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Skeleton } from '@chakra-ui/skeleton';\r\nimport {\r\n  Paginator,\r\n  Previous,\r\n  Next,\r\n  PageGroup,\r\n  Container,\r\n} from 'chakra-paginator';\r\n\r\nimport Wrapper from '../../components/Wrapper';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport SingleItem from '../../components/SingleItem';\r\nimport { MessageResponse, CommonResponse, AllMsgType } from '../../types';\r\nimport { getMethod } from '../../utils/fetchData';\r\nimport TitleCol from '../../components/TitleCol';\r\nimport { ButtonProps } from '@chakra-ui/react';\r\n\r\ninterface URLProps {}\r\n\r\nconst Urls: React.FC<URLProps> = () => {\r\n  const isMobile = window.innerWidth < 760;\r\n  const isSmallDevices = window.innerWidth < 450;\r\n  const [dataLoading, setDataLoading] = useState(true);\r\n  const [messages, setMessages] = useState<MessageResponse[]>([]);\r\n  const { loggedIn, loading, setLoggedIn } = React.useContext(UserContext);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const outerLimit: number = isSmallDevices ? 1 : isMobile ? 3 : 4;\r\n  const innerLimit: number = isSmallDevices ? 1 : isMobile ? 3 : 4;\r\n  useEffect(() => {\r\n    async function fetchMessages() {\r\n      const data = await getMethod<CommonResponse<AllMsgType>>(`/message/${currentPage}`);\r\n      if (data.status === 'FAILED') {\r\n        setLoggedIn(false);\r\n      } else {\r\n        setTotalPages(Math.ceil(data.data.count / 5));\r\n        setMessages(data.data.messages);\r\n      }\r\n      setDataLoading(false);\r\n    };\r\n    if (!loading) {\r\n      fetchMessages();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage])\r\n  if (!loggedIn && !loading) {\r\n    toast({\r\n      title: 'Please Login To Continue',\r\n      status: 'error',\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n    history.push('/login');\r\n  }\r\n  const handlePageChange = (currentPage: number) => {\r\n    setCurrentPage(currentPage);\r\n    setDataLoading(true);\r\n  };\r\n  const baseStyles: ButtonProps = {\r\n    w: 7,\r\n    fontSize: \"sm\",\r\n  };\r\n\r\n  const normalStyles: ButtonProps = {\r\n    ...baseStyles,\r\n  };\r\n\r\n  const activeStyles: ButtonProps = {\r\n    ...baseStyles,\r\n    bg: \"green.300\",\r\n  };\r\n\r\n  const separatorStyles: ButtonProps = {\r\n    w: 7,\r\n    bg: \"gray.200\",\r\n  };\r\n  return (\r\n    <Wrapper width=\"100%\">\r\n      <Flex alignItems=\"center\" flexDir=\"column\" width=\"100%\" mt={5} mb={10}>\r\n        <Text fontSize=\"4xl\" textAlign=\"center\" mb={5}>Your Urls</Text>\r\n        {\r\n          dataLoading\r\n          ? <>\r\n            <Stack mb={10}>\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n            </Stack>\r\n            <Stack mb={10}>\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n            </Stack>\r\n            <Stack mb={10}>\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n              <Skeleton height=\"20px\" width=\"50vw\" />\r\n            </Stack>\r\n          </>\r\n          : messages.length > 0 \r\n            ? <>\r\n              <TitleCol isMobile={isMobile} isSmallDevices={isSmallDevices} />\r\n              {\r\n                messages.map(msg => (\r\n                  <SingleItem\r\n                    key={msg.id}\r\n                    type={msg.type}\r\n                    url={msg.url}\r\n                    expiresAt={new Date(msg.expiresAt)}\r\n                    isActive={!msg.expired}\r\n                    isMobile={isMobile}\r\n                    isSmallDevices={isSmallDevices}\r\n                  />\r\n                ))\r\n              }\r\n              <Paginator\r\n                isDisabled={false}\r\n                activeStyles={activeStyles}\r\n                innerLimit={innerLimit}\r\n                outerLimit={outerLimit}\r\n                currentPage={currentPage}\r\n                normalStyles={normalStyles}\r\n                separatorStyles={separatorStyles}\r\n                pagesQuantity={totalPages}\r\n                onPageChange={handlePageChange}\r\n              >\r\n                <Container align=\"center\" justify=\"space-between\" w=\"full\" p={4}>\r\n                  <Previous bg=\"green.300\">\r\n                    Previous\r\n                  </Previous>\r\n                  <PageGroup isInline align=\"center\" />\r\n                  <Next bg=\"green.300\">\r\n                    Next\r\n                  </Next>\r\n                </Container>\r\n              </Paginator>\r\n            </>\r\n            : <>\r\n              <Heading size=\"xl\" mt={10}>No URLS Found</Heading>\r\n              <Button\r\n                as={Link}\r\n                to=\"/create\"\r\n                mt={5}\r\n                colorScheme=\"teal\"\r\n              >\r\n                Create One\r\n              </Button>\r\n            </>\r\n        }\r\n      </Flex>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Urls;\r\n","import * as React from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport CreateUrl from './pages/CreateUrl';\nimport DisplayMessage from './pages/DisplayMessage';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Register from './pages/Register';\nimport Urls from './pages/Urls';\nimport { UserContext } from './providers/UserProvider';\nimport { CommonResponse, UserResponse } from './types';\nimport { getMethod } from './utils/fetchData';\n\nconst App = () => {\n  const { loggedIn, setLoggedIn, setUserInfo, setLoading } = React.useContext(UserContext);\n  const { pathname } = useLocation();\n  React.useEffect(() => {\n    const pathBool = (pathname === '/' || pathname === '/login' || pathname === '/register' || pathname === '/urls' || pathname === '/create');\n    if (!loggedIn && pathBool) {\n      getMethod<CommonResponse<UserResponse | string>>('/me').then(data => {\n        if (data.status === 'SUCCESS') {\n          setUserInfo(data.data as UserResponse);\n          setLoggedIn(true);\n        }\n        setLoading(false);\n      }).catch(err => {\n        setLoading(false);\n      })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={(): JSX.Element => (\n            <>\n              <NavBar />\n              <Home />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          component={(): JSX.Element => (\n            <>\n              <NavBar />\n              <Login />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/register\"\n          component={(): JSX.Element => (\n            <>\n              <NavBar />\n              <Register />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/urls\"\n          component={(): JSX.Element => (\n            <>\n              <NavBar />\n              <Urls />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/create\"\n          component={(): JSX.Element => (\n            <>\n              <NavBar />\n              <CreateUrl />\n            </>\n          )}\n        />\n        <Route\n          exact\n          path=\"/notFound\"\n          component={(): JSX.Element => <NotFound />}\n        />\n        <Route\n          exact\n          path=\"/:id\"\n          component={(): JSX.Element => <DisplayMessage />}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { theme as chakraTheme } from '@chakra-ui/react'\r\n\r\nconst fonts = { ...chakraTheme.fonts, mono: `'Menlo', monospace` }\r\n\r\nconst breakpoints = ['40em', '52em', '64em']\r\n\r\nconst theme = {\r\n  ...chakraTheme,\r\n  colors: {\r\n    ...chakraTheme.colors,\r\n    black: '#16161D',\r\n  },\r\n  fonts,\r\n  breakpoints,\r\n}\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, ThemeProvider } from '@chakra-ui/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport theme from './theme';\nimport UserProvider from './providers/UserProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ChakraProvider>\n        <ThemeProvider theme={theme}>\n          <UserProvider>\n            <App />\n          </UserProvider>\n        </ThemeProvider>\n      </ChakraProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}